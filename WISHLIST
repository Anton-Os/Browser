-*- WISHLST -*-

proxy auth type and http auth type for this: http://user:password@www.example.com

ssl 3.0 and tls 1.0 same as a real browser but might add dependencies

Cheatsheet of the python/cpp comparison

threaded ssl openssl gnuTLS

br.encoding() for utf-8 and others

Function to grab all emails in a page, similar to the links grabber.

curl_multi using this for multiple handle at the same time and pipelining

check the $(curl-config --feature) to know with which feature the cULR library was built

Convert it to a static and shared library for multiple OS

change br.response into a class like in python:
>>> dir(br.response())
['__copy__', '__doc__', '__getattr__', '__init__', '__iter__', '__module__', '__repr__', '__setattr__', '_headers', '_seek_wrapper__cache', '_seek_wrapper__have_readline', '_seek_wrapper__is_
closed_state', '_seek_wrapper__pos', '_seek_wrapper__read_complete_state', 'close', 'get_data', 'geturl', 'info', 'invariant', 'next', 'read', 'readline', 'readlines', 'seek', 'set_data', 'te
ll', 'wrapped', 'xreadlines']

Review the whole code to make it more clean and more efficient

use StringPoolL or better algorithm instead of cstring for real efficiency (long string accessed many times is cpu and ram intensive)

